(()=>{var e={418:(e,s,t)=>{t(252).Router();const o=t(520);e.exports={deleteContact:async(e,s)=>{try{const t=e.params.id,n=await o.findByIdAndDelete(t);if(!n)return s.status(404).json({message:"Контакт не найден"});s.json({message:"Контакт успешно удален",contact:n})}catch(e){s.status(500).json({message:"Ошибка при удалении контакта",error:e.message})}}}},339:(e,s,t)=>{const o=t(829),{secret:n}=t(505),r=t(621);s.login=async(e,s)=>{try{if(!e.body||!e.body.login||!e.body.password)return s.status(400).json({message:"Неполные данные для входа"});const{login:t,password:a}=e.body,i=await r.findOne({login:t});if(!i)return s.status(400).json({message:"Пользователь не найден!"});if(i.password!==a)return s.status(400).json({message:"Неверный логин или пароль!"});const c=((e,s)=>{const t={login:e.toString(),role:s.toString()};return o.sign(t,n,{expiresIn:"24h"})})(i.login,i.role),u={login:i.login,username:i.username,email:i.email,registrationDate:i.registrationDate,role:i.role};s.json({message:"Вы успешно авторизовались!",token:c,user:u})}catch(e){console.error("Ошибка авторизации:",e),s.status(500).json({message:"Ошибка сервера"})}}},204:(e,s,t)=>{const o=t(520);e.exports={getContacts:async function(e,s){try{const e=await o.find().populate("organization","name").sort({organization:1,department:1,subdivision:1,fullName:1}).exec();console.log("Контакты из базы данных:",e),s.json(e)}catch(e){console.error("Ошибка при получении списка контактов:",e),s.status(500).send("Ошибка сервера")}}}},816:(e,s,t)=>{const o=t(520),n=t(293);e.exports={addContact:async function(e,s){console.log(e.body);try{let t=e.body.organization;if(e.body.isNewOrganization){const s=new n({name:e.body.newOrganizationName});t=(await s.save())._id,console.log("Создана новая организация с ID:",t)}delete e.body.isNewOrganization,delete e.body.newOrganizationName,e.body.organization=t;const r=new o(e.body),a=await r.save();console.log("Добавлен новый контакт:",a),s.status(201).send("Контакт успешно добавлен")}catch(e){console.error("Ошибка при добавлении контакта:",e),s.status(500).send("Ошибка сервера при добавлении контакта")}}}},768:(e,s,t)=>{t(818).config();const o=t(37),n=encodeURIComponent(process.env.DB_USER),r=encodeURIComponent(process.env.DB_PASSWORD),a=process.env.DB_HOST||"localhost",i=process.env.DB_PORT||"27017",c=process.env.DB_NAME||"phonebook",u=process.env.MONGODB_SERVER_URL||`mongodb://${n}:${r}@${a}:${i}/${c}?authSource=admin`;e.exports=async()=>{try{await o.connect(u,{useNewUrlParser:!0,useUnifiedTopology:!0}),console.log("Подключен к MongoDB")}catch(e){console.error("Не удалось подключиться к MongoDB:",e)}}},754:(e,s,t)=>{const o=t(252).Router(),n=t(520);o.get("/:id",(async(e,s)=>{const{id:t}=e.params;try{const e=await n.findById(t).populate("organization","name");if(!e)return s.status(404).json({message:"Контакт не найден"});s.json(e)}catch(e){console.error("Ошибка при получении контакта:",e),s.status(500).json({message:"Ошибка сервера"})}})),o.put("/:id",(async(e,s)=>{const{id:t}=e.params,o=e.body;try{let e=await n.findByIdAndUpdate(t,o,{new:!0}).populate("organization","name");if(!e)return s.status(404).json({message:"Контакт не найден"});s.json(e)}catch(e){console.error("Ошибка при обновлении контакта:",e),s.status(500).json({message:"Ошибка сервера"})}})),e.exports=o},264:(e,s,t)=>{const o=t(252).Router(),{getContacts:n}=(t(520),t(204));o.get("/",n),e.exports=o},520:(e,s,t)=>{const o=t(37),n=new o.Schema({organization:{type:o.Schema.Types.ObjectId,ref:"Organization",required:!0},department:{type:String,required:!0},subdivision:{type:String},office:{type:String,required:!0},fullName:{type:String,required:!0},position:{type:String,required:!0},officePhone:{type:String,required:!0},internalPhone:{type:String},mobilePhone:{type:String,required:!0},email:{type:String,required:!0}}),r=o.model("Contact",n);e.exports=r},293:(e,s,t)=>{const o=t(37),n=new o.Schema({name:{type:String,required:!0},departments:[{name:{type:String,required:!0},subdivisions:[String],offices:[String]}]}),r=o.model("Organization",n);e.exports=r},621:(e,s,t)=>{const{Schema:o,model:n}=t(37),r=new o({login:{type:String,uniqued:!0,required:!0},password:{type:String,required:!0},email:{type:String,uniqued:!0,required:!0},registrationDate:{type:Date,default:Date.now},role:{type:String,required:!0}});e.exports=n("User",r)},700:(e,s,t)=>{const o=t(252).Router(),n=t(293);o.get("/",(async(e,s)=>{try{const e=await n.find();s.json(e)}catch(e){console.error("Ошибка при получении организаций:",e),s.status(500).send("Ошибка при получении организаций")}})),o.post("/",(async(e,s)=>{try{const t=new n(e.body),o=await t.save();s.status(201).json(o)}catch(e){console.error("Ошибка при создании организации:",e),s.status(500).send("Ошибка при создании организации")}})),e.exports=o},892:(e,s,t)=>{const o=t(252).Router(),n=t(520);o.get("/",(async(e,s)=>{const t=parseInt(e.query.page)||1,o=parseInt(e.query.size)||10,r=e.query.filter||"",a=e.query.search||"",i=e.query.field||"";let c={};r&&(c.organization=r),a&&i?c[i]={$regex:a,$options:"i"}:a&&(c={$or:[{fullName:{$regex:a,$options:"i"}},{internalPhone:{$regex:a,$options:"i"}},{officePhone:{$regex:a,$options:"i"}},{mobilePhone:{$regex:a,$options:"i"}},{department:{$regex:a,$options:"i"}},{position:{$regex:a,$options:"i"}},{office:{$regex:a,$options:"i"}}]});try{const e=await n.countDocuments(c),r=await n.find(c).populate("organization").skip((t-1)*o).limit(o);s.json({items:r,totalItems:e})}catch(e){console.error("Ошибка при выполнении поиска и пагинации:",e),s.status(500).send(e.message)}})),e.exports=o},536:(e,s,t)=>{const o=t(621),{ObjectId:n}=t(37);s.register=async(e,s)=>{try{console.log(e.body);const{login:t,password:n,email:r,role:a}=e.body;if(!t||!n||!r)return s.status(400).json({message:"Неполные данные для регистрации"});const i=new o({login:t,password:n,email:r,role:a});await i.save(),s.json({message:"Вы успешно зарегистрировались!"})}catch(e){console.error("Ошибка регистрации:",e),s.status(500).json({message:"Ошибка сервера"})}}},955:(e,s,t)=>{const o=t(252).Router(),{addContact:n}=t(816),r=t(264),a=t(754),{searchContacts:i}=t(684),c=t(339),u=t(536),p=t(422),{deleteContact:l}=t(418),g=t(892),d=t(700),m=t(803);o.post("/login",c.login),o.post("/registration",u.register),o.post("/change-password/:id",p.changePassword),o.post("/change-email/:id",p.changeEmail),o.post("/contacts",n),o.get("/contacts/search",i),o.use("/contacts",r),o.use("/edit",a),o.delete("/delete-contacts/:id",l),o.use("/organizations",d),o.use("/pagination",g),o.use("/upload",m),e.exports=o},684:(e,s,t)=>{const o=t(520);e.exports={searchContacts:async(e,s)=>{const{q:t,field:n}=e.query,r=[];"fullName"!==n&&n||r.push({fullName:{$regex:new RegExp(t,"i")}}),"officePhone"!==n&&n||r.push({officePhone:{$regex:new RegExp(t,"i")}}),"department"!==n&&n||r.push({department:{$regex:new RegExp(t,"i")}}),"position"!==n&&n||r.push({position:{$regex:new RegExp(t,"i")}}),"room"!==n&&n||r.push({room:{$regex:new RegExp(t,"i")}});try{const e=await o.find({$or:r}).populate("organization","name").exec();s.json(e)}catch(e){console.error("Ошибка при поиске контактов:",e),s.status(500).json({message:"Ошибка сервера"})}}}},505:e=>{e.exports={secret:"passwords"}},803:(e,s,t)=>{const o=t(252),n=t(461),r=o.Router(),a=t(751),i=t(896),c=n({dest:"uploads/"}),u=t(520),p=t(293);r.post("/",c.single("file"),(async(e,s)=>{try{const t=a.readFile(e.file.path),o=t.Sheets[t.SheetNames[0]],n=a.utils.sheet_to_json(o,{header:1});i.unlinkSync(e.file.path);const r=n.slice(1).map((async e=>{const[s,t,o,n,r,a,i,c,l,g]=e;let d=await p.findOneAndUpdate({name:s},{$setOnInsert:{name:s}},{upsert:!0,new:!0});return u.findOneAndUpdate({fullName:r,email:g},{organization:d._id,department:t,subdivision:o,office:n,fullName:r,position:a,officePhone:i,internalPhone:c,mobilePhone:l,email:g},{upsert:!0,new:!0,setDefaultsOnInsert:!0})})),c=await Promise.all(r);s.send({success:!0,message:`Processed ${c.length} contacts.`})}catch(e){console.error("Error processing file:",e),s.status(500).send({success:!1,message:"Failed to process file",error:e.message})}})),e.exports=r},422:(e,s,t)=>{t(829);const{secret:o}=t(505),n=t(621);s.changePassword=async(e,s)=>{const{login:t}=e.params,{newPassword:o}=e.body;try{const e=await n.findOne({user:t});if(!e)return s.status(404).json({message:"Пользователь не найден"});e.password=o,await e.save(),s.status(200).json({message:"Пароль успешно изменен"})}catch(e){console.error("Ошибка при изменении пароля:",e),s.status(500).json({message:"Ошибка при изменении пароля"})}},s.changeEmail=async(e,s)=>{const{login:t}=e.params,{newEmail:o}=e.body;try{const e=await n.findOne({user:t});if(!e)return s.status(404).json({message:"Пользователь не найден"});e.email=o,await e.save(),s.status(200).json({message:"Адрес электронной почты успешно изменен"})}catch(e){console.error("Ошибка при изменении адреса электронной почты:",e),s.status(500).json({message:"Ошибка при изменении адреса электронной почты"})}}},268:e=>{"use strict";e.exports=require("body-parser")},577:e=>{"use strict";e.exports=require("cors")},818:e=>{"use strict";e.exports=require("dotenv")},252:e=>{"use strict";e.exports=require("express")},829:e=>{"use strict";e.exports=require("jsonwebtoken")},37:e=>{"use strict";e.exports=require("mongoose")},461:e=>{"use strict";e.exports=require("multer")},751:e=>{"use strict";e.exports=require("xlsx")},896:e=>{"use strict";e.exports=require("fs")},692:e=>{"use strict";e.exports=require("https")}},s={};function t(o){var n=s[o];if(void 0!==n)return n.exports;var r=s[o]={exports:{}};return e[o](r,r.exports,t),r.exports}(()=>{const e=t(252);t(818).config();const s=t(768),o=t(577),n=t(268),r=e(),a=t(692),i=t(896),c=process.env.PORT||5e3,u=t(955),p={key:i.readFileSync("/etc/ssl/certs/server.key"),cert:i.readFileSync("/etc/ssl/certs/server.crt")};r.use(n.json()),r.use(o()),r.use("/api",u),a.createServer(p,r).listen(5050,(()=>{console.log("Сервер запущен на порту 5050")})),(async()=>{await s(),r.listen(c,(()=>console.log(`Сервер запущен на ${c} порте`)))})()})()})();